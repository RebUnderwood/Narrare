{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Narr\u0101re A Godot-based framework for making text-based adventure games and interactive fiction! Get Narr\u0101re! Back in Ye Olden Days, games like Zork and Anchorhead used the medium of text to create elaborate, interactive worlds. Through intuitive, natural language, players could interact with these worlds naturally, exploring them at their whim. Nowadays, this genre of game has largely faded from the minds of all but the truly niche-minded, and part of the reason for that is that the tools for creating them have not evolved with the rest of the gaming landscape. The most popular software for producing interactive fiction, Inform 7, is very good at what it does, but does not offer the full capabilities of a modern game engine. I developed Narr\u0101re because I wanted to make text-based games that could do more . It's a framework for the Godot game engine that takes most of the difficult work of developing these types of games out of the equation, but because it's based in Godot, you get all the power and capabilities of Godot too. Custom interfaces, sprites, 3D animations, minigames\u2014whatever you want to make, you can build it on top of Narr\u0101re. Narr\u0101re is also designed with the technical-minded in mind. If you want to get into the nuts and bolts, you can. Create your own commands, implement complex logic, whatever you want to do.","title":"Home"},{"location":"#narrare","text":"A Godot-based framework for making text-based adventure games and interactive fiction!","title":"Narr\u0101re"},{"location":"about/","text":"","title":"About"},{"location":"getting_started/","text":"Getting Started Most of Narr\u0101re's internal logic is housed within the Narr\u0101re Core folder. You will probably not need to modify anything in there unless you are making fundamental changes to Narr\u0101re. Exposed to the user are the Narrare global script, the Room and Map classes, and the Prompt and InputRequest classes, which will be basic building blocks of your game. Additionally, in the Root folder of the project is a folder called Scripts. This contains three scripts by default: Commands , Data , and Interactables . These you should modify, as they are integral to the logic of your game. Commands defines what commands will be available for the player to use; Data will contain any variables you need to track game state; and Interactables defines all the things within the game that can be interacted with and how.","title":"Getting Started"},{"location":"getting_started/#getting-started","text":"Most of Narr\u0101re's internal logic is housed within the Narr\u0101re Core folder. You will probably not need to modify anything in there unless you are making fundamental changes to Narr\u0101re. Exposed to the user are the Narrare global script, the Room and Map classes, and the Prompt and InputRequest classes, which will be basic building blocks of your game. Additionally, in the Root folder of the project is a folder called Scripts. This contains three scripts by default: Commands , Data , and Interactables . These you should modify, as they are integral to the logic of your game. Commands defines what commands will be available for the player to use; Data will contain any variables you need to track game state; and Interactables defines all the things within the game that can be interacted with and how.","title":"Getting Started"},{"location":"documentation/commands/","text":"TBD","title":"Commands"},{"location":"documentation/commands/#tbd","text":"","title":"TBD"},{"location":"documentation/data/","text":"TBD","title":"Data"},{"location":"documentation/data/#tbd","text":"","title":"TBD"},{"location":"documentation/inputrequest/","text":"TBD","title":"InputRequest"},{"location":"documentation/inputrequest/#tbd","text":"","title":"TBD"},{"location":"documentation/interactables/","text":"TBD","title":"Interactables"},{"location":"documentation/interactables/#tbd","text":"","title":"TBD"},{"location":"documentation/map/","text":"TBD","title":"Map"},{"location":"documentation/map/#tbd","text":"","title":"TBD"},{"location":"documentation/narrare_global_script/","text":"Narrare The Narrare global script contains variables, enums, signals, and functions used throughout a Narr\u0101re game. It can be accessed with Narrare from anywhere in the project. For example: Narrare.say_someting(\"Hello world!\"); Enums Direction Direction {NONE, NORTH, NORTHWEST, WEST, SOUTHWEST, SOUTH, SOUTHEAST, EAST, NORTHEAST, UP, DOWN} Indicates a cardinal direction, as well as up or down. Typically used to refer to an exit or entrance to a Room. Signals These signals can be connected to from anywhere in the project. say_something say_something(message: String) Indicates that a String 'message' should be outputted to the player. This will typically be connected to by the interface, but could be used for other purposes as well. clear_output clear_output Indicates that the output should be cleared. done_writing_to_output done_writing_to_output This should be emitted when the interface is done writing something to the output. You do not need to do this if you will not be using this signal. done_writing_to_input done_writing_to_input This should be emitted when the interface is done writing something to the command input. You do not need to do this if you will not be using this signal. prompt_changed prompt_changed(is_prompt: bool) Emitted when a change is made to the Narrare.current_prompt variable; if Narrare.current_prompt has been set to null, is_prompt will be false, otherwise it will be true. input_request_changed input_request_changed(is_input_request: bool) Emitted when a change is made to the Narrare.current_input_request variable; if Narrare.current_input_request has been set to null, is_input_request will be false, otherwise it will be true. Variables player_inventory player_inventory: PackedStringArray; The player's inventory. Contains a PackedStringArray of names of interactables which reference interactables in the Interactables.gd script's objs variable. To add an interactable to the player's inventory, use Narrare.add_to_inventory(item_name: String) . To remove an item, use remove_from_inventory(item_name: String) . map map: Map The current Map. This should be set by the game when a Map node is loaded. previous_text_displayed previous_text_displayed: String The last meaningful text to be output to the player. This text is saved when calling Narrare.save() , and will be output when that save is loaded. It is generally advised that you only set this variable when something useful is output, like the description of a room or the result of interacting with an interactable. data_saved data_saved: bool Should be set to true only if the game state has not been changed since the last time the game was saved. If it is false , a confirmation prompt will be shown when loading a save. Generally you won't have to interact with this variable yourself. current_prompt current_prompt: Prompt If you want to present the player with a Prompt , this variable should be set to that Prompt. Otherwise, it should be null. Changing this variable emits the prompt_changed signal. current_input_request current_input_request: InputRequest ** If you want to present the player with an InputRequest , this variable should be set to that InputRequest. Otherwise, it should be null. Changing this variable emits the input_request_changed signal. Functions add_to_inventory add_to_inventory(item_name: String) -> void Adds an interactable name to the player's inventory. remove_from_inventory remove_from_inventory(item_name: String) -> bool Removes an interactable by name from the player's inventory. Returns false' if that interactable name wasn't found in the inventory, otherwise returns true`. say say(message: String) -> void A convenience function. Emits the say_something(message) signal, indicating that message should be output to the player. clear clear() -> void A convenience function. Emits the clear_output signal, indicating that the output should be cleared. save save(save_name: String = \"-----\") -> int Attempts to save the game. Saves are saved to the user://Saves directory. Saves are given a name save_name which will be displayed when calling Narrare.list_saves() . The returned int is the number of the save which will be used to access it by Narrare.load_save(save_number: String) . It will return -1 if the save failed. list_saves list_saves() -> String Returns in String format a list of saves in the user://Saves directory. load_save load_save(save_number: String) -> Dictionary Attempts to load a saved game from the user://Saves directory by save_number. Note that save_number is given as a String; this is because this will be user input. If this function succeeds, the game state will be changed to reflect the data in the loaded save. Returns a Dictionary of the form {\"err\": Error, \"out\": String} where err is a Godot Error enum value and out is a resulting string to output to the user. If Narrare.data_saved is false , a confirmation Prompt will be given to the user before the load goes through.","title":"Narrare"},{"location":"documentation/narrare_global_script/#narrare","text":"The Narrare global script contains variables, enums, signals, and functions used throughout a Narr\u0101re game. It can be accessed with Narrare from anywhere in the project. For example: Narrare.say_someting(\"Hello world!\");","title":"Narrare"},{"location":"documentation/narrare_global_script/#enums","text":"","title":"Enums"},{"location":"documentation/narrare_global_script/#direction","text":"Direction {NONE, NORTH, NORTHWEST, WEST, SOUTHWEST, SOUTH, SOUTHEAST, EAST, NORTHEAST, UP, DOWN} Indicates a cardinal direction, as well as up or down. Typically used to refer to an exit or entrance to a Room.","title":"Direction"},{"location":"documentation/narrare_global_script/#signals","text":"These signals can be connected to from anywhere in the project.","title":"Signals"},{"location":"documentation/narrare_global_script/#say_something","text":"say_something(message: String) Indicates that a String 'message' should be outputted to the player. This will typically be connected to by the interface, but could be used for other purposes as well.","title":"say_something"},{"location":"documentation/narrare_global_script/#clear_output","text":"clear_output Indicates that the output should be cleared.","title":"clear_output"},{"location":"documentation/narrare_global_script/#done_writing_to_output","text":"done_writing_to_output This should be emitted when the interface is done writing something to the output. You do not need to do this if you will not be using this signal.","title":"done_writing_to_output"},{"location":"documentation/narrare_global_script/#done_writing_to_input","text":"done_writing_to_input This should be emitted when the interface is done writing something to the command input. You do not need to do this if you will not be using this signal.","title":"done_writing_to_input"},{"location":"documentation/narrare_global_script/#prompt_changed","text":"prompt_changed(is_prompt: bool) Emitted when a change is made to the Narrare.current_prompt variable; if Narrare.current_prompt has been set to null, is_prompt will be false, otherwise it will be true.","title":"prompt_changed"},{"location":"documentation/narrare_global_script/#input_request_changed","text":"input_request_changed(is_input_request: bool) Emitted when a change is made to the Narrare.current_input_request variable; if Narrare.current_input_request has been set to null, is_input_request will be false, otherwise it will be true.","title":"input_request_changed"},{"location":"documentation/narrare_global_script/#variables","text":"","title":"Variables"},{"location":"documentation/narrare_global_script/#player_inventory","text":"player_inventory: PackedStringArray; The player's inventory. Contains a PackedStringArray of names of interactables which reference interactables in the Interactables.gd script's objs variable. To add an interactable to the player's inventory, use Narrare.add_to_inventory(item_name: String) . To remove an item, use remove_from_inventory(item_name: String) .","title":"player_inventory"},{"location":"documentation/narrare_global_script/#map","text":"map: Map The current Map. This should be set by the game when a Map node is loaded.","title":"map"},{"location":"documentation/narrare_global_script/#previous_text_displayed","text":"previous_text_displayed: String The last meaningful text to be output to the player. This text is saved when calling Narrare.save() , and will be output when that save is loaded. It is generally advised that you only set this variable when something useful is output, like the description of a room or the result of interacting with an interactable.","title":"previous_text_displayed"},{"location":"documentation/narrare_global_script/#data_saved","text":"data_saved: bool Should be set to true only if the game state has not been changed since the last time the game was saved. If it is false , a confirmation prompt will be shown when loading a save. Generally you won't have to interact with this variable yourself.","title":"data_saved"},{"location":"documentation/narrare_global_script/#current_prompt","text":"current_prompt: Prompt If you want to present the player with a Prompt , this variable should be set to that Prompt. Otherwise, it should be null. Changing this variable emits the prompt_changed signal.","title":"current_prompt"},{"location":"documentation/narrare_global_script/#current_input_request","text":"current_input_request: InputRequest ** If you want to present the player with an InputRequest , this variable should be set to that InputRequest. Otherwise, it should be null. Changing this variable emits the input_request_changed signal.","title":"current_input_request"},{"location":"documentation/narrare_global_script/#functions","text":"","title":"Functions"},{"location":"documentation/narrare_global_script/#add_to_inventory","text":"add_to_inventory(item_name: String) -> void Adds an interactable name to the player's inventory.","title":"add_to_inventory"},{"location":"documentation/narrare_global_script/#remove_from_inventory","text":"remove_from_inventory(item_name: String) -> bool Removes an interactable by name from the player's inventory. Returns false' if that interactable name wasn't found in the inventory, otherwise returns true`.","title":"remove_from_inventory"},{"location":"documentation/narrare_global_script/#say","text":"say(message: String) -> void A convenience function. Emits the say_something(message) signal, indicating that message should be output to the player.","title":"say"},{"location":"documentation/narrare_global_script/#clear","text":"clear() -> void A convenience function. Emits the clear_output signal, indicating that the output should be cleared.","title":"clear"},{"location":"documentation/narrare_global_script/#save","text":"save(save_name: String = \"-----\") -> int Attempts to save the game. Saves are saved to the user://Saves directory. Saves are given a name save_name which will be displayed when calling Narrare.list_saves() . The returned int is the number of the save which will be used to access it by Narrare.load_save(save_number: String) . It will return -1 if the save failed.","title":"save"},{"location":"documentation/narrare_global_script/#list_saves","text":"list_saves() -> String Returns in String format a list of saves in the user://Saves directory.","title":"list_saves"},{"location":"documentation/narrare_global_script/#load_save","text":"load_save(save_number: String) -> Dictionary Attempts to load a saved game from the user://Saves directory by save_number. Note that save_number is given as a String; this is because this will be user input. If this function succeeds, the game state will be changed to reflect the data in the loaded save. Returns a Dictionary of the form {\"err\": Error, \"out\": String} where err is a Godot Error enum value and out is a resulting string to output to the user. If Narrare.data_saved is false , a confirmation Prompt will be given to the user before the load goes through.","title":"load_save"},{"location":"documentation/prompt/","text":"TBD","title":"Prompt"},{"location":"documentation/prompt/#tbd","text":"","title":"TBD"},{"location":"documentation/room/","text":"TBD","title":"Room"},{"location":"documentation/room/#tbd","text":"","title":"TBD"}]}